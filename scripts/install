#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

admin_mail=$(ynh_user_get_info $admin 'mail')

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing dependencies..."

ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

tempdir="$(mktemp -d)"
ynh_setup_source --dest_dir="$tempdir"
mkdir -p $install_dir

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# PIP INSTALLATION
#=================================================
ynh_script_progression "Installing project via pip..."

python3 -m venv "${install_dir}/venv"
cp ../conf/requirements.txt "$install_dir/requirements.txt"
chown -R "$app" "$install_dir"
#run source in a 'sub shell'
(
	set +o nounset
	source "${install_dir}/venv/bin/activate"
	set -o nounset
	ynh_exec_as_app $install_dir/venv/bin/pip install --upgrade pip
	ynh_exec_as_app $install_dir/venv/bin/pip install archivebox==0.7.2
	#ynh_exec_as_app $install_dir/venv/bin/pip install -r "$install_dir/requirements.txt"
)

# we use this virtualenv archivebox for further commands now
archivebox_cmd="$install_dir/venv/bin/archivebox"

#=================================================
# INSTALL NODE DEPENDENCIES
#=================================================
ynh_script_progression "Installing node dependencies..."

cp -f $tempdir/package.json "$install_dir/package.json"
cp -f $tempdir/package-lock.json "$install_dir/package-lock.json"
ynh_safe_rm "$tempdir"

pushd $install_dir
	ynh_hide_warnings ynh_exec_as_app npm ci
popd

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration..."

ynh_config_add --template="ArchiveBox.conf" --destination="$data_dir/ArchiveBox.conf"

chmod 600 "$data_dir/ArchiveBox.conf"
chown $app:$app "$data_dir/ArchiveBox.conf"

#=================================================
# INITIALIZE ARCHIVEBOX
#=================================================
ynh_script_progression "Initializing $app"

pushd $data_dir
	ynh_hide_warnings ynh_exec_as_app $archivebox_cmd init

	ynh_script_progression "Checking if admin superuser already exists: $admin"

	USER_EXISTS=$(ynh_exec_as_app $archivebox_cmd manage shell -c "from django.contrib.auth.models import User; print(User.objects.filter(username='$admin').count())")
	ynh_script_progression "Found users: $USER_EXISTS"

	if [ $USER_EXISTS -eq 1 ]
	then
		ynh_script_progression "User already exists: setting admin password"
		ynh_exec_as_app /usr/bin/expect<<EOF
set force_conservative 0  ;
set timeout -1
spawn sh -c "cd $data_dir && $archivebox_cmd manage changepassword $admin"
match_max 100000
expect "*?assword: "
send -- "$password\r"
expect "*?assword (again): "
send -- "$password\r"
expect eof
EOF
	else
		ynh_script_progression "Creating new Archivebox superuser: $admin"
		ynh_exec_as_app /usr/bin/expect<<EOF
set force_conservative 0  ;
set timeout -1
spawn sh -c "cd $data_dir && $archivebox_cmd manage createsuperuser --username $admin --email $admin_mail"
match_max 100000
expect "*?assword: "
send -- "$password\r"
expect "*?assword (again): "
send -- "$password\r"
expect eof
EOF
	fi

	ynh_script_progression "Finishing Archivebox Setup"

	ynh_hide_warnings ynh_exec_as_app $archivebox_cmd init --setup
popd

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

ynh_config_add_nginx

ynh_config_add_systemd

ynh_config_add_logrotate

yunohost service add $app --description="Self-hosted internet archiving" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
